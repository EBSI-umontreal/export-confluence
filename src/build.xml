<?xml version="1.0" encoding="UTF-8" ?>
<project name="Confluence - Migration des guides de l'EBSI en PDF/epub" basedir="." default="choix"  xmlns:if="ant:if" xmlns:unless="ant:unless">
	
	<property name="dossier-output" value="./out"/>
	<property name="epub-output.tempo" value="${dossier-output}/epub"/>
	
	
	<target name="about" description="À propos">
		<echo>+-----------------------------------------------------------+</echo>
		<echo>   Confluence - Migration des guides de l'EBSI en PDF/epub   </echo>
		<echo>+-----------------------------------------------------------+</echo>
		<echo> EBSI - Universite de Montreal</echo>
		<echo> Arnaud d'Alayer 2016-2023</echo>
		<echo />
		<echo> Version : 20230825</echo>
		<echo>+-----------------------------------------------------------+</echo>
	</target>
	
	<!-- ==========================================================
		 =                    Tâche choix                   =
		 ==========================================================
	-->
	<target name="choix" depends="about">
		<echo>Choix du guide a exporter :</echo>
		<echo>1) 1er cycle</echo>
		<echo>2) 2e cycle</echo>
		<echo>3) docto</echo>
		<echo>4) Personnel</echo>
		
		<input message="Votre choix?" validargs="1,2,3,4" addproperty="guideAExporter"/>
		<condition property="choix.1">
			<equals arg1="1" arg2="${guideAExporter}"/>
		</condition>
		<condition property="choix.2">
			<equals arg1="2" arg2="${guideAExporter}"/>
		</condition>
		<condition property="choix.3">
			<equals arg1="3" arg2="${guideAExporter}"/>
		</condition>
		<condition property="choix.4">
			<equals arg1="4" arg2="${guideAExporter}"/>
		</condition>
		
		
		<antcall target="export.1ercycle"/>
		<antcall target="export.2ecycle"/>
		<antcall target="export.docto"/>
		<antcall target="export.pers"/>
	</target>
	
	
	<target name="export.1ercycle" if="choix.1">
		<echo>Exportation du guide du 1er cycle...</echo>
		
		<property name="wiki-url" value="https://wiki.umontreal.ca/pages/viewpage.action?pageId=124093923"/>
		<property name="cache-output" value="${dossier-output}/guide1ercycle"/>
		<property name="xml-output" value="${cache-output}/guide1ercycle.xml"/>
		<property name="epub-output.fichier" value="${dossier-output}/guide1ercycle.epub"/>
		<property name="epub-template" value="./_templates/guides"/>
		<property name="pdf-output.fichier" value="${dossier-output}/guide1ercycle.pdf"/>
		<!-- encoder/décoder argument : 
			1) https://www.web2generators.com/html-based-tools/online-html-entities-encoder-and-decoder
			2) remplacer &quote; par &apos;
			3) remettre les caractères unicodes : ex. &copy; -> ©
		-->
		<property name="pdf-output.footnote" value="&lt;div&gt; &lt;table style=&apos;width:100%;border-top:1px solid black;margin-top:1em;&apos;&gt;&lt;tr&gt;&lt;td style=&apos;width:33%;font-size: 10pt;&apos;&gt;Guide 1er cycle&lt;/td&gt;&lt;td style=&apos;width:33%;text-align:center;font-size: 10pt;&apos;&gt;- _PAGENUM_ -&lt;/td&gt;&lt;td style=&apos;text-align:right;width:33%;font-size: 10pt;&apos;&gt;©EBSI 2023-2024&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt; &lt;/div&gt;"/>
		<antcall target="exportation"/>
	</target>
	
	<target name="export.2ecycle" if="choix.2">
		<echo>Exportation du guide du 2e cycle...</echo>
		
		<property name="wiki-url" value="https://wiki.umontreal.ca/pages/viewpage.action?pageId=124093925"/>
		<property name="cache-output" value="${dossier-output}/guide2ecycle"/>
		<property name="xml-output" value="${cache-output}/guide2ecycle.xml"/>
		<property name="epub-output.fichier" value="${dossier-output}/guide2ecycle.epub"/>
		<property name="epub-template" value="./_templates/guides"/>
		<property name="pdf-output.fichier" value="${dossier-output}/guide2ecycle.pdf"/>
		<property name="pdf-output.footnote" value="&lt;div&gt; &lt;table style=&apos;width:100%;border-top:1px solid black;margin-top:1em;&apos;&gt;&lt;tr&gt;&lt;td style=&apos;width:33;font-size: 10pt;%&apos;&gt;Guide de la maîtrise&lt;/td&gt;&lt;td style=&apos;width:33%;text-align:center;font-size: 10pt;&apos;&gt;- _PAGENUM_ -&lt;/td&gt;&lt;td style=&apos;text-align:right;width:33%;font-size: 10pt;&apos;&gt;©EBSI 2023-2024&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt; &lt;/div&gt;"/>
		<antcall target="exportation"/>
	</target>
	
	<target name="export.docto" if="choix.3">
		<echo>Exportation du guide du docto...</echo>
		
		<property name="wiki-url" value="https://wiki.umontreal.ca/pages/viewpage.action?pageId=124097476"/>
		<property name="cache-output" value="${dossier-output}/guidedocto"/>
		<property name="xml-output" value="${cache-output}/guidedocto.xml"/>
		<property name="epub-output.fichier" value="${dossier-output}/guidedocto.epub"/>
		<property name="epub-template" value="./_templates/guides"/>
		<property name="pdf-output.fichier" value="${dossier-output}/guidedocto.pdf"/>
		<property name="pdf-output.footnote" value="&lt;div&gt; &lt;table style=&apos;width:100%;border-top:1px solid black;margin-top:1em;&apos;&gt;&lt;tr&gt;&lt;td style=&apos;width:33;font-size: 10pt;%&apos;&gt;Guide doctorat&lt;/td&gt;&lt;td style=&apos;width:33%;text-align:center;font-size: 10pt;&apos;&gt;- _PAGENUM_ -&lt;/td&gt;&lt;td style=&apos;text-align:right;width:33;font-size: 10pt;%&apos;&gt;©EBSI 2023-2024&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt; &lt;/div&gt;"/>
		<antcall target="exportation"/>
	</target>
	
	<target name="export.pers" if="choix.4">
		<echo>Exportation du guide du personnel...</echo>
		
		<property name="wiki-url" value="https://wiki.umontreal.ca/pages/viewpage.action?pageId=124098127"/>
		<property name="cache-output" value="${dossier-output}/guidepers"/>
		<property name="xml-output" value="${cache-output}/guidepers.xml"/>
		<property name="epub-output.fichier" value="${dossier-output}/guidepers.epub"/>
		<property name="epub-template" value="./_templates/guides"/>
		<property name="pdf-output.fichier" value="${dossier-output}/guidepers.pdf"/>
		<property name="pdf-output.footnote" value="&lt;div&gt; &lt;table style=&apos;width:100%;border-top:1px solid black;margin-top:1em;&apos;&gt;&lt;tr&gt;&lt;td style=&apos;width:33;font-size: 10pt;%&apos;&gt;Guide du personnel&lt;/td&gt;&lt;td style=&apos;width:33%;text-align:center;font-size: 10pt;&apos;&gt;- _PAGENUM_ -&lt;/td&gt;&lt;td style=&apos;text-align:right;width:33;font-size: 10pt;%&apos;&gt;©EBSI 2023-2024&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt; &lt;/div&gt;"/>
		<antcall target="exportation"/>
	</target>
	
	
	<!-- ==========================================================
		 =                    Tâche exportation                   =
		 ==========================================================
	-->
	<target name="exportation">
		<if>
			<available file="${xml-output}"/>
			<then>
				<echo>Fichier de cache XML present pour ce document. Que voulez-vous faire?</echo>
				<echo>1) Utiliser les fichiers caches</echo>
				<echo>2) Telecharger de nouveau les pages et les images</echo>
				<input message="Votre choix?" validargs="1,2" addproperty="cacheOuDownload"/>
				<condition property="cacheOuDownload.1">
					<equals arg1="1" arg2="${cacheOuDownload}"/>
				</condition>
				<condition property="cacheOuDownload.2">
					<equals arg1="2" arg2="${cacheOuDownload}"/>
				</condition>
			</then>
			<else>
				<property name="cacheOuDownload.2" value="true"/>
			</else>
		</if>
		<antcall target="exportation.cache"/>
		<antcall target="exportation.download"/>
	</target>
	
	<target name="exportation.cache" if="cacheOuDownload.1">
		<echo>Exportation avec fichier de cache</echo>
		<antcall target="epub"/>
		<antcall target="pdf"/>
	</target>
	
	<target name="exportation.download" if="cacheOuDownload.2">
		<echo>Exportation avec telechargement des fichiers</echo>
		<delete dir="${cache-output}"/>
		<antcall target="xml"/>
		<antcall target="epub"/>
		<antcall target="pdf"/>
	</target>
	
	<!--<target name="exportation" depends="xml, epub">
		<echo>Exportation : Fin!</echo>
	</target>
	-->
	<!-- ==========================================================
		 =                     Authentification                   =
		 ==========================================================
	-->
	<target name="authentification">
		<echo>/!\ Authentification /!\</echo>
		<echo>Votre code d'acces et votre UNIP peuvent etre requis pour certaines taches (acces aux pages, telechargement des images, etc.)</echo>
		<input message="Veuillez entrer votre code d'acces (vide = anonyme):" addproperty="codeAcces"/>
		
		<condition property="anonyme">
			<equals arg1="" arg2="${codeAcces}" />
		</condition>
		<echo if:set="anonyme">Acces anonyme</echo>
		
		<input unless:set="anonyme" message="Veuillez entrer votre UNIP :" addproperty="motDePasse">
			<handler classname="org.apache.tools.ant.input.SecureInputHandler" />
		</input>
	</target>
	
	
	<!-- ==========================================================
		 =                        Tâches XML                      =
		 ==========================================================
	-->
	<target name="xml" depends="XML_exportation, XML_nettoyer, XML_well-formed">
		<echo>XML : Fin!</echo>
	</target>
	
	
	<target name="XML_exportation" depends="authentification">
		<echo>XML : Exportation XML et telechargement des images...</echo>
		<!-- Création de la structure du cache -->
		<mkdir dir="${cache-output}"/>
		<mkdir dir="${cache-output}/images"/>
		<!-- Téléchargement avec script CasperJS -->
		<exec dir="${basedir}" executable="cmd.exe">
			<arg line="/c casperjs transfert-guide.js --url='${wiki-url}' --codeAcces='${codeAcces}' --motDePasse='${motDePasse}' --xmlOutput='${xml-output}' --cacheOutput='${cache-output}'"/>
		</exec>
	</target>
	
	
	<target name="XML_nettoyer">
		<echo>XML : Correction du balisage</echo>
		<!-- corriger les br non fermés -->
		<replaceregexp file="${xml-output}" flags="g">
			<regexp pattern="&lt;br&gt;"/>
			<substitution expression="&lt;br/&gt;"/>
		</replaceregexp>
		<!-- corriger les hr non fermés -->
		<replaceregexp file="${xml-output}" flags="g">
			<regexp pattern="&lt;hr&gt;"/>
			<substitution expression="&lt;hr/&gt;"/>
		</replaceregexp>
		<!-- corriger les img non fermés -->
		<replaceregexp file="${xml-output}" flags="g">
			<regexp pattern="&lt;img([^>]*)&gt;"/>
			<substitution expression="&lt;img\1/&gt;"/>
		</replaceregexp>
		
		<!--https://stackoverflow.com/questions/1765847/deleting-new-lines-with-regular-expression-from-ant-task-->
		<replaceregexp file="${xml-output}" match="(\r?\n)\s*\r?\n" replace="\1" flags="g"/>
		
		<!--Correction des espaces avec les span -->
		<replaceregexp file="${xml-output}" match="&lt;/span&gt;\n\." replace="&lt;/span&gt;." flags="g"/>
		<replaceregexp file="${xml-output}" match="&lt;span" replace=" &lt;span" flags="g"/>
		<!-- 
		<replaceregexp file="${xml-output}" match="  " replace=" " flags="g"/>
		<replaceregexp file="${xml-output}" match="data-hasbody=&quot;true&quot;\s*" replace="" flags="g"/>
		-->
		
		<!--Conf6.7+ corriger les col non fermés -->
		<replaceregexp file="${xml-output}" flags="g">
			<regexp pattern="&lt;col&gt;"/>
			<substitution expression="&lt;col/&gt;"/>
		</replaceregexp>
		<replaceregexp file="${xml-output}" flags="g">
			<regexp pattern="&lt;col\s([^>]*)&gt;"/>
			<substitution expression="&lt;col \1/&gt;"/>
		</replaceregexp>
		<!--Conf6.7+ supprimer les valeurs d'attributs conf-macro & output-block -->
		<replaceregexp file="${xml-output}" flags="g">
			<regexp pattern="(\s*)conf-macro"/>
			<substitution expression=""/>
		</replaceregexp>
		<replaceregexp file="${xml-output}" flags="g">
			<regexp pattern="(\s*)output-block"/>
			<substitution expression=""/>
		</replaceregexp>
		<replaceregexp file="${xml-output}" flags="g">
			<regexp pattern="^\n"/>
			<substitution expression=""/>
		</replaceregexp>
	</target>
	
	
	<target name="XML_well-formed">
		<echo>XML : Validation du fichier XML...</echo>
		<xmlvalidate file="${xml-output}" lenient="true"/>
	</target>
	
	
	<!-- ==========================================================
		 =                      Tâches ePub                       =
		 ==========================================================
	-->
	<target name="epub" depends="epub_structure, epub_pages, epub_img, epub_spine, epub_toc, epub_zip">
		<echo>ePub : Fin!</echo>
	</target>
	
	
	<target name="epub_structure">
		<echo>ePub : Creation de la structure vide</echo>
		
		<delete dir="${epub-output.tempo}"/>
		<copy todir="${epub-output.tempo}" >
			<fileset dir="${epub-template}/epub" includes="**"/>
		</copy>
	</target>
	
	
	<target name="epub_pages">
		<echo>ePub : Creation des pages XHTML</echo>
		<xslt-saxon9
			in="${xml-output}"
			style="${epub-template}/epub_pages.xsl"
			destdir="${epub-output.tempo}/OEBPS/tempo1.txt"/>
		<delete file="${epub-output.tempo}/OEBPS/tempo1.txt"/>
	</target>
	
	
	<!-- https://stackoverflow.com/questions/5455309/how-to-read-data-line-by-line-from-a-file-using-ant-script -->
	<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpath="./vendor/ant-contrib-1.0b3/ant-contrib-1.0b3.jar"/>
	<taskdef resource="net/sf/antcontrib/antlib.xml" classpath="./vendor/ant-contrib-1.0b3/ant-contrib-1.0b3.jar"/>
	<target name="epub_img">
		<!--
		<echo>ePub : Telechargement des images</echo>
		<property name="epub-images" value="${epub-output}/OEBPS/images"/>
		<xslt in="${xml-output}" style="images.xsl" out="${epub-images}/images.txt" force="yes"/>
		<loadfile property="file" srcfile="${epub-images}/images.txt"/>
		<for param="line" list="${file}" delimiter="${line.separator}">
			<sequential>
				<echo>@{line}</echo>
				<get src="@{line}" dest="${epub-images}"/>
			</sequential>
		</for>
		-->
		<echo>ePub : Copie des images</echo>
		<copy todir="${epub-output.tempo}/OEBPS/images" >
			<fileset dir="${cache-output}/images" includes="**"/>
		</copy>
	</target>
	
	
	<target name="epub_spine">
		<echo>ePub : Creation du fichier content.opf</echo>
		<xslt in="${xml-output}" style="${epub-template}/epub_spine.xsl" out="${epub-output.tempo}/OEBPS/content.opf" force="yes"/>
	</target>
	
	
	<target name="epub_toc">
		<echo>ePub : Creation du fichier toc.ncx</echo>
		<xslt in="${xml-output}" style="${epub-template}/epub_toc.xsl" out="${epub-output.tempo}/OEBPS/toc.ncx" force="yes"/>
	</target>
	
	
	<target name="epub_zip">
		<echo>ePub : Creation du conteneur .epub</echo>
		<!-- Two steps because mimetype must go in first, uncompressed. Looks like ant puts later zipped files in first, so mimetype is in second zip task. -->
		<zip destfile="${epub-output.fichier}" basedir="${epub-output.tempo}" excludes="mimetype" compress="true" zip64Mode="never"/>
		<zip destfile="${epub-output.fichier}" basedir="${epub-output.tempo}" includes="mimetype" update="true" keepcompression="true" compress="false" createunicodeextrafields="never" zip64Mode="never"/>
	</target>
	
	
	<!-- ==========================================================
		 =                      Tâches PDF                       =
		 ==========================================================
	-->
	<target name="pdf">
		<echo unless:set="pdf-output.fichier">tache ignoree, configurez les proprietes pdf-output</echo>
		<delete file="${pdf-output.fichier}" if:set="pdf-output.fichier"/>
		<exec executable="ebook-convert" if:set="pdf-output.fichier">
			<arg value="${epub-output.fichier}"/>
			<arg value="${pdf-output.fichier}"/>
			<!-- liste des paramètres : https://manual.calibre-ebook.com/generated/en/ebook-convert.html -->
			<arg value="--embed-all-fonts"/>
			<arg value="--disable-font-rescaling"/>
			<arg value="--enable-heuristics"/>
			<arg value="--uncompressed-pdf"/>
			<arg value="--paper-size=&quot;letter&quot;"/>
			<arg value="--pdf-footer-template=${pdf-output.footnote}" if:set="pdf-output.footnote" />
			<arg value="--pdf-header-template=${pdf-output.header}" if:set="pdf-output.header" />
		</exec>
		<echo>PDF : Fin!</echo>
	</target>
	
	
	<!-- ===========================================================
		  =                      Moteurs XSLT                      =
		  ==========================================================
	-->
	<!-- http://vocaro.com/trevor/blog/2007/01/08/how-to-use-saxon-with-ant/ -->
	<macrodef name="xslt-saxon9">
		<attribute name="in"/>
		<attribute name="destdir"/>
		<attribute name="style"/>
		<sequential>
			<echo>Transformation XSLT avec Saxon 9 : in=@{in} out=@{destdir} style=@{style}</echo>
			<java classname="net.sf.saxon.Transform"
				classpath="./vendor/SaxonHE9-8-0-12J/saxon9he.jar"
				fork="true">
				<arg value="-o:@{destdir}"/>
				<arg value="@{in}"/>
				<arg value="@{style}"/>
			</java>
		</sequential>
	</macrodef>
	
</project>